events {
    worker_connections  1024;
    use epoll;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    server_tokens   off;
    gzip            on;
    gzip_static     on;
    gzip_comp_level 5;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript text/x-js font/ttf font/opentype application/vnd.ms-fontobject image/svg+xml;
    keepalive_timeout  65;
    limit_conn_zone   $binary_remote_addr  zone=addr:10m;

    # Load config files from the /etc/nginx/conf.d directory
    # include /etc/nginx/conf.d/*.conf;

    # run your localhost console remote personal sever on port 8080, and second on port 8081 if you need a better performance
    
    upstream consoleServerBackend {
    ip_hash;
    server 127.0.0.1:8080;
    # server 127.0.0.1:8081;
    }

    map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
    }

server {

    server_name  yourConsoleServerDomainName;

    listen       443 ssl;

    underscores_in_headers on;

    error_log /var/log/nginx/yourConsoleServerDomainName.error.log;

    ssl_certificate /etc/letsencrypt/live/yourConsoleServerDomainName/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourConsoleServerDomainName/privkey.pem;

    keepalive_timeout    60;
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  10m;

    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers   on;

    large_client_header_buffers 8 32k;
    charset UTF-8;
    root /home/yourConsoleServerLocation/build;

    location ~* \.(jpg|jpeg|gif|png|ico|css|zip|tgz|pdf|txt|js|flv|swf|ttf|otf|woff|eot)$ {
    access_log off;
    error_log /var/log/nginx/yourConsoleServerDomainName.static.error.log;
    expires 30d;
    }

    proxy_pass http://consoleServerBackend/;

    proxy_set_header Proxy '';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_redirect off;

    set $CORS_CREDS true;
    set $CORS_ORIGIN $http_origin;
    set $CORS_METHODS 'GET, POST, PUT, DELETE, OPTIONS';
    set $CORS_HEADERS 'Authentication-Token, Cache-Control, Cookie, If-Modified-Since, Range, User-Agent, X-Requested-With';
    # FYI: Always allowed headers: Accept, Accept-Language, Content-Language, Content-Type
    set $CORS_EXPOSE_HEADERS 'Content-Disposition, Content-Length, Content-Range, Set-Cookie';
    # FYI: Always exposed headers: Cache-Control, Content-Language, Content-Type, Expires, Last-Modified, Pragma
    set $CORS_PREFLIGHT_CACHE_AGE 600;
    set $X_FRAME_OPTIONS '';
    # set $X_FRAME_OPTIONS "ALLOW FROM $http_origin";

    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin $CORS_ORIGIN;
        add_header Access-Control-Allow-Methods $CORS_METHODS;
        add_header Access-Control-Allow-Headers $CORS_HEADERS;
        add_header Access-Control-Allow-Credentials $CORS_CREDS;

        add_header Access-Control-Max-Age $CORS_PREFLIGHT_CACHE_AGE;
        add_header Content-Type 'text/plain; charset=utf-8';
        add_header Content-Length 0;
        return 204;
    }

    if ($request_method != 'OPTIONS') {
          add_header Access-Control-Allow-Origin $CORS_ORIGIN;
          add_header Access-Control-Allow-Methods $CORS_METHODS;
          add_header Access-Control-Allow-Headers $CORS_HEADERS;
          add_header Access-Control-Allow-Credentials $CORS_CREDS;

          add_header Access-Control-Expose-Headers $CORS_EXPOSE_HEADERS;
          add_header X-Frame-Options $X_FRAME_OPTIONS;
    }

    # supposedly prevents 502 bad gateway error;
    proxy_buffers 8 32k;
    proxy_buffer_size 64k;
    proxy_read_timeout 120;
    proxy_connect_timeout 120;

    # proxy_next_upstream error timeout;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    access_log /var/log/nginx/yourConsoleServerDomainName.websockets.log;
    error_log /var/log/nginx/yourConsoleServerDomainName.websockets.error.log;
    }

    location / {
          access_log /var/log/nginx/yourConsoleServerDomainName.access.log;
          expires 30d;
          index /www/index.html;
          error_log /var/log/nginx/yourConsoleServerDomainName.error.log;
          try_files $uri $uri/ /app/consoleapp.html;
        } 
    }
}

